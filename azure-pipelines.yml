# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  Version.MajorMinor: 1.0
  Version.Revision: $[counter(variables['Version.MajorMinor'], 12)]
  VERSION: $(Version.MajorMinor).$(Version.Revision)

steps:
- task: DockerInstaller@0
  inputs:
    dockerVersion: '20.10.5'
  displayName: 'Install Docker'  

- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: 'GTT'

- task: Docker@2
  displayName: Build and Push
  inputs:
    command: buildAndPush
    Dockerfile: ./gtt-web/Dockerfile-prod
    containerRegistry: 'GTT'
    repository: 'gtt-web'
    arguments: |
      --build-arg DBHOST=$(DBHOST) 
      --build-arg DBUSER=$(DBUSER) 
      --build-arg DBPASS=$(DBPASS) 
      --build-arg DBTYPE=$(DBTYPE) 
      --build-arg DBNAME=$(DBNAME) 
    tags: |
      $(VERSION)
      latest

- task: Docker@2
  displayName: Logout of ACR
  inputs:
    command: logout
    containerRegistry: 'GTT'

- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.15.1'
  displayName: 'Install Terraform'

- task: Bash@3
  displayName: 'Terrafrom Apply'
  inputs:
    targetType: filePath
    filePath: ./scripts/deploy.sh